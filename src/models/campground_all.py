# generated by datamodel-codegen:
#   filename:  https://thedyrt.com/api/v6/campgrounds/
#   timestamp: 2025-05-10T22:19:13+00:00

from __future__ import annotations

from collections.abc import Sequence
from typing import Optional

from pydantic import BaseModel, Field
from typing import Union

class Links(BaseModel):
    self: str


class Coordinates(BaseModel):
    type: str
    coordinates: Sequence[float]


class AccessDrive(BaseModel):
    value: bool
    annotation: None


class AccessWalk(BaseModel):
    value: bool
    annotation: None


class AccommodationDispersed(BaseModel):
    value: bool
    annotation: None


class AccommodationRv(BaseModel):
    value: bool
    annotation: None


class AccommodationStandard(BaseModel):
    value: bool
    annotation: None


class AccommodationTent(BaseModel):
    value: bool
    annotation: None


class AccommodationTentCabin(BaseModel):
    value: bool
    annotation: None


class AccommodationYurt(BaseModel):
    value: bool
    annotation: None


class AlcoholAllowed(BaseModel):
    value: bool
    annotation: None


class BigRigFriendly(BaseModel):
    value: bool
    annotation: None


class DrinkingWater(BaseModel):
    value: bool
    annotation: None


class DrivewayBackIn(BaseModel):
    value: bool
    annotation: None


class DrivewayPullThrough(BaseModel):
    value: bool
    annotation: None


class ElectricHookups(BaseModel):
    value: bool
    annotation: None


class FiresAllowed(BaseModel):
    value: bool
    annotation: None


class Firewood(BaseModel):
    value: bool
    annotation: None


class Market(BaseModel):
    value: bool
    annotation: None


class MobileService(BaseModel):
    value: bool
    annotation: None


class PetsAllowed(BaseModel):
    value: bool
    annotation: None


class PicnicTable(BaseModel):
    value: bool
    annotation: None


class Reservable(BaseModel):
    value: bool
    annotation: None


class SanitaryDump(BaseModel):
    value: bool
    annotation: None


class SewerHookups(BaseModel):
    value: bool
    annotation: None


class Showers(BaseModel):
    value: bool
    annotation: None


class Toilets(BaseModel):
    value: bool
    annotation: None


class Trash(BaseModel):
    value: bool
    annotation: None


class WaterHookups(BaseModel):
    value: bool
    annotation: None


class AccessBoat(BaseModel):
    value: bool
    annotation: None


class AccessHike(BaseModel):
    value: bool
    annotation: None


class AccommodationCabin(BaseModel):
    value: bool
    annotation: None


class AccommodationGroup(BaseModel):
    value: bool
    annotation: None


class AccommodationHorse(BaseModel):
    value: bool
    annotation: None


class DrivewayParallel(BaseModel):
    value: bool
    annotation: None


class Wifi(BaseModel):
    value: bool
    annotation: None


class AdaAccess(BaseModel):
    value: bool
    annotation: None


class Free(BaseModel):
    value: bool
    annotation: None


class AnnotatedFeatures(BaseModel):
    access_drive: Optional[AccessDrive] = Field(None, alias='access-drive')
    access_walk: Optional[AccessWalk] = Field(None, alias='access-walk')
    accommodation_dispersed: Optional[AccommodationDispersed] = Field(
        None, alias='accommodation-dispersed'
    )
    accommodation_rv: Optional[AccommodationRv] = Field(None, alias='accommodation-rv')
    accommodation_standard: Optional[AccommodationStandard] = Field(
        None, alias='accommodation-standard'
    )
    accommodation_tent: Optional[AccommodationTent] = Field(
        None, alias='accommodation-tent'
    )
    accommodation_tent_cabin: Optional[AccommodationTentCabin] = Field(
        None, alias='accommodation-tent-cabin'
    )
    accommodation_yurt: Optional[AccommodationYurt] = Field(
        None, alias='accommodation-yurt'
    )
    alcohol_allowed: Optional[AlcoholAllowed] = Field(None, alias='alcohol-allowed')
    big_rig_friendly: Optional[BigRigFriendly] = Field(None, alias='big-rig-friendly')
    drinking_water: Optional[DrinkingWater] = Field(None, alias='drinking-water')
    driveway_back_in: Optional[DrivewayBackIn] = Field(None, alias='driveway-back-in')
    driveway_pull_through: Optional[DrivewayPullThrough] = Field(
        None, alias='driveway-pull-through'
    )
    electric_hookups: Optional[ElectricHookups] = Field(None, alias='electric-hookups')
    fires_allowed: Optional[FiresAllowed] = Field(None, alias='fires-allowed')
    firewood: Optional[Firewood] = None
    market: Optional[Market] = None
    mobile_service: Optional[MobileService] = Field(None, alias='mobile-service')
    pets_allowed: Optional[PetsAllowed] = Field(None, alias='pets-allowed')
    picnic_table: Optional[PicnicTable] = Field(None, alias='picnic-table')
    reservable: Optional[Reservable] = None
    sanitary_dump: Optional[SanitaryDump] = Field(None, alias='sanitary-dump')
    sewer_hookups: Optional[SewerHookups] = Field(None, alias='sewer-hookups')
    showers: Optional[Showers] = None
    toilets: Optional[Toilets] = None
    trash: Optional[Trash] = None
    water_hookups: Optional[WaterHookups] = Field(None, alias='water-hookups')
    access_boat: Optional[AccessBoat] = Field(None, alias='access-boat')
    access_hike: Optional[AccessHike] = Field(None, alias='access-hike')
    accommodation_cabin: Optional[AccommodationCabin] = Field(
        None, alias='accommodation-cabin'
    )
    accommodation_group: Optional[AccommodationGroup] = Field(
        None, alias='accommodation-group'
    )
    accommodation_horse: Optional[AccommodationHorse] = Field(
        None, alias='accommodation-horse'
    )
    driveway_parallel: Optional[DrivewayParallel] = Field(
        None, alias='driveway-parallel'
    )
    wifi: Optional[Wifi] = None
    ada_access: Optional[AdaAccess] = Field(None, alias='ada-access')
    free: Optional[Free] = None


class Attributes(BaseModel):
    access_types: Sequence[str] = Field(..., alias="access-types")
    accommodation_types: Sequence[str] = Field(..., alias="accommodation-types")
    availability_horizon_end_date: str = Field(..., alias="availability-horizon-end-date")
    camper_types: Sequence[str] = Field(..., alias="camper-types")
    coordinates: Coordinates
    custom_map: Optional[str] = Field(None, alias="custom-map")
    custom_map_data_uri: Optional[str] = Field(None, alias="custom-map-data-uri")
    custom_map_url: Optional[str] = Field(None, alias="custom-map-url")
    latitude: float
    longitude: float
    elevation: int
    price_low: Optional[str] = Field(None, alias="price-low")
    price_low_cents: Optional[int] = Field(None, alias="price-low-cents")
    price_low_currency: str = Field(..., alias="price-low-currency")
    price_high: Optional[str] = Field(None, alias="price-high")
    price_high_cents: Optional[int] = Field(None, alias="price-high-cents")
    price_high_currency: str = Field(..., alias="price-high-currency")
    number_of_sites: Optional[int] = Field(None, alias="number-of-sites")
    campsites_count: int = Field(..., alias="campsites-count")
    category: str
    description: Optional[str]
    detailed_category: str = Field(..., alias="detailed-category")
    directions: Optional[str]
    fee_info: Optional[str] = Field(None, alias="fee-info")
    annotated_features: AnnotatedFeatures = Field(..., alias="annotated-features")
    reservation_info: Optional[str] = Field(None, alias="reservation-info")
    toilet_info: Optional[str] = Field(None, alias="toilet-info")
    email: Optional[str]
    minimum_age: Optional[int] = Field(None, alias="minimum-age")
    name: str
    phone_number: Optional[str] = Field(None, alias="phone-number")
    reservation_phone_number: Optional[str] = Field(None, alias="reservation-phone-number")
    permit_required: Optional[bool] = Field(None, alias="permit-required")
    permit_id: Optional[Union[str,int]] = Field(None, alias="permit-id")
    photo_url: Optional[str] = Field(None, alias="photo-url")
    rating: float
    address: Optional[str]
    city: Optional[str]
    region: str
    region_name: str = Field(..., alias="region-name")
    postal_code: Optional[str] = Field(None, alias="postal-code")
    slug: Optional[str] = None
    website: Optional[str] = Field(None, alias="website")
    reservation_url: Optional[str] = Field(None, alias="reservation-url")
    season: Optional[str]
    season_start: Optional[str] = Field(None, alias="season-start")
    season_end: Optional[str] = Field(None, alias="season-end")
    check_in_time: Optional[str] = Field(None, alias="check-in-time")
    check_out_time: Optional[str] = Field(None, alias="check-out-time")
    time_zone: Optional[str] = Field(None, alias="time-zone")
    nearest_city_name: str = Field(..., alias="nearest-city-name")
    nearest_city_region_name: str = Field(..., alias="nearest-city-region-name")
    nearest_city_slug: str = Field(..., alias="nearest-city-slug")
    bookmarks_count: int = Field(..., alias="bookmarks-count")
    lists_count: int = Field(..., alias="lists-count")
    photos_count: int = Field(..., alias="photos-count")
    videos_count: int = Field(..., alias="videos-count")
    reviews_count: int = Field(..., alias="reviews-count")
    one_star_reviews_count: int = Field(..., alias="one-star-reviews-count")
    two_star_reviews_count: int = Field(..., alias="two-star-reviews-count")
    three_star_reviews_count: int = Field(..., alias="three-star-reviews-count")
    four_star_reviews_count: int = Field(..., alias="four-star-reviews-count")
    five_star_reviews_count: int = Field(..., alias="five-star-reviews-count")
    has_featured_photo: bool = Field(..., alias="has-featured-photo")
    claimable: bool
    claimed: bool
    bookable: bool
    partner: Optional[str]
    managed_by_current_user: bool = Field(..., alias="managed-by-current-user")
    booking_method: Optional[str] = Field(None, alias="booking-method")
    permanently_closed: bool = Field(..., alias="permanently-closed")
    ada_access: Optional[bool] = Field(None, alias="ada-access")
    alcohol_allowed: Optional[bool] = Field(None, alias="alcohol-allowed")
    big_rig_friendly: Optional[bool] = Field(None, alias="big-rig-friendly")
    drinking_water: Optional[bool] = Field(None, alias="drinking-water")
    electric_amperage: int = Field(..., alias="electric-amperage")
    electric_hookups: Optional[bool] = Field(None, alias="electric-hookups")
    fifty_amp_hookups: Optional[bool] = Field(None, alias="fifty-amp-hookups")
    fires_allowed: Optional[bool] = Field(None, alias="fires-allowed")
    firewood: Optional[bool] = Field(None, alias="firewood")
    free: Optional[bool] = Field(None, alias="free")
    generators_allowed: Optional[bool] = Field(None, alias="generators-allowed")
    group_sites: Optional[bool] = Field(None, alias="group-sites")
    horse_corral: Optional[bool] = Field(None, alias="horse-corral")
    laundry: Optional[bool] = Field(None, alias="laundry")
    market: Optional[bool] = Field(None, alias="market")
    max_vehicle_length_ft: Optional[int] = Field(None, alias="max-vehicle-length-ft")
    mobile_service: Optional[bool] = Field(None, alias="mobile-service")
    pets_allowed: Optional[bool] = Field(None, alias="pets-allowed")
    picnic_table: Optional[bool] = Field(None, alias="picnic-table")
    propane_fill: Optional[bool] = Field(None, alias="propane-fill")
    reservable: Optional[bool] = Field(None, alias="reservable")
    rv_storage: Optional[bool] = Field(None, alias="rv-storage")
    sanitary_dump: Optional[bool] = Field(None, alias="sanitary-dump")
    sewer_hookups: Optional[bool] = Field(None, alias="sewer-hookups")
    showers: Optional[bool] = Field(None, alias="showers")
    thirty_amp_hookups: Optional[bool] = Field(None, alias="thirty-amp-hookups")
    toilets: Optional[bool] = Field(None, alias="toilets")
    trash: Optional[bool] = Field(None, alias="trash")
    water_hookups: Optional[bool] = Field(None, alias="water-hookups")
    wifi: Optional[bool] = Field(None, alias="wifi")
    access_boat: Optional[bool] = Field(None, alias="access-boat")
    access_drive: Optional[bool] = Field(None, alias="access-drive")
    access_hike: Optional[bool] = Field(None, alias="access-hike")
    access_walk: Optional[bool] = Field(None, alias="access-walk")
    accommodation_cabin: Optional[bool] = Field(None, alias="accommodation-cabin")
    accommodation_dispersed: Optional[bool] = Field(None, alias="accommodation-dispersed")
    accommodation_glamping: Optional[bool] = Field(None, alias="accommodation-glamping")
    accommodation_group: Optional[bool] = Field(None, alias="accommodation-group")
    accommodation_rv: Optional[bool] = Field(None, alias="accommodation-rv")
    accommodation_tent: Optional[bool] = Field(None, alias="accommodation-tent")
    accommodation_tent_cabin: Optional[bool] = Field(None, alias="accommodation-tent-cabin")
    accommodation_horse: Optional[bool] = Field(None, alias="accommodation-horse")
    accommodation_yurt: Optional[bool] = Field(None, alias="accommodation-yurt")
    accommodation_standard: Optional[bool] = Field(None, alias="accommodation-standard")
    driveway_back_in: Optional[bool] = Field(None, alias="driveway-back-in")
    driveway_parallel: Optional[bool] = Field(None, alias="driveway-parallel")
    driveway_pull_through: Optional[bool] = Field(None, alias="driveway-pull-through")
    arrival_info: Optional[str] = Field(None, alias="arrival-info")
    verified_at: Optional[str] = Field(None, alias="verified-at")
    external_api: str = Field(..., alias="external-api")
    external_api_id: Optional[str] = Field(None, alias="external-api-id")
    created_at: str = Field(..., alias="created-at")
    merged_at: Optional[str] = Field(None, alias="merged-at")
    updated_at: str = Field(..., alias="updated-at")
    general_location: bool = Field(..., alias="general-location")
    eligible_for_availability: bool = Field(..., alias="eligible-for-availability")
    eligible_for_scanning: bool = Field(..., alias="eligible-for-scanning")
    monthly_rate: Optional[bool] = Field(None, alias="monthly-rate")
    seasonal_discount: Optional[bool] = Field(None, alias="seasonal-discount")
    weekly_rate: Optional[bool] = Field(None, alias="weekly-rate")
    lake: Optional[bool] = Field(None, alias="lake")
    ocean: Optional[bool] = Field(None, alias="ocean")
    river: Optional[bool] = Field(None, alias="river")
    biking_trails: Optional[bool] = Field(None, alias="biking-trails")
    equestrian_trails: Optional[bool] = Field(None, alias="equestrian-trails")
    fishing: Optional[bool] = Field(None, alias="fishing")
    hiking_trails: Optional[bool] = Field(None, alias="hiking-trails")
    kayaking: Optional[bool] = Field(None, alias="kayaking")
    ohv_area: Optional[bool] = Field(None, alias="ohv-area")
    skiing: Optional[bool] = Field(None, alias="skiing")
    swimming: Optional[bool] = Field(None, alias="swimming")
    basketball_court: Optional[bool] = Field(None, alias="basketball-court")
    beach: Optional[bool] = Field(None, alias="beach")
    bike_rental: Optional[bool] = Field(None, alias="bike-rental")
    boat_ramp: Optional[bool] = Field(None, alias="boat-ramp")
    boat_rental: Optional[bool] = Field(None, alias="boat-rental")
    dog_run: Optional[bool] = Field(None, alias="dog-run")
    game_room: Optional[bool] = Field(None, alias="game-room")
    gym: Optional[bool] = Field(None, alias="gym")
    horseshoes: Optional[bool] = Field(None, alias="horseshoes")
    hot_tub: Optional[bool] = Field(None, alias="hot-tub")
    mini_golf: Optional[bool] = Field(None, alias="mini-golf")
    pickleball: Optional[bool] = Field(None, alias="pickleball")
    playground: Optional[bool] = Field(None, alias="playground")
    swimming_pool: Optional[bool] = Field(None, alias="swimming-pool")
    tennis_court: Optional[bool] = Field(None, alias="tennis-court")
    volleyball_court: Optional[bool] = Field(None, alias="volleyball-court") 
    version_changes: Sequence = Field(..., alias='version-changes')
    ai_description: Optional[str] = Field(..., alias='ai-description')
    last_modified_at: str = Field(..., alias='last-modified-at')
    administrative_area_id: Optional[str] = Field(..., alias='administrative-area-id')
    operator_id: Optional[str] = Field(..., alias='operator-id')
    canonical_record_id: Optional[str] = Field(..., alias='canonical-record-id')
    nearest_city_id: str = Field(..., alias='nearest-city-id')


class Links1(BaseModel):
    self: str
    related: str


class ActiveContest(BaseModel):
    links: Links1


class AdministrativeArea(BaseModel):
    links: Links1


class AirQuality(BaseModel):
    links: Links1


class CanonicalRecord(BaseModel):
    links: Links1


class FeaturedPhoto(BaseModel):
    links: Links1


class LinkCluster(BaseModel):
    links: Links1


class NearestCity(BaseModel):
    links: Links1


class Operator(BaseModel):
    links: Links1


class Permit(BaseModel):
    links: Links1


class Campsites(BaseModel):
    links: Links1


class Accommodations(BaseModel):
    links: Links1


class Alerts(BaseModel):
    links: Links1


class BlockedDateRanges(BaseModel):
    links: Links1


class Bookmarks(BaseModel):
    links: Links1


class CampgroundClaims(BaseModel):
    links: Links1


class DumpStations(BaseModel):
    links: Links1


class Duplicates(BaseModel):
    links: Links1


class MediaItems(BaseModel):
    links: Links1


class NearbyMetroDrivingLinks(BaseModel):
    links: Links1


class Photos(BaseModel):
    links: Links1


class PricingRules(BaseModel):
    links: Links1


class Rates(BaseModel):
    links: Links1


class RecentReviewers(BaseModel):
    links: Links1


class Reviews(BaseModel):
    links: Links1


class Taxes(BaseModel):
    links: Links1


class Videos(BaseModel):
    links: Links1


class WaterStations(BaseModel):
    links: Links1


class Relationships(BaseModel):
    active_contest: ActiveContest = Field(..., alias='active-contest')
    administrative_area: AdministrativeArea = Field(..., alias='administrative-area')
    air_quality: AirQuality = Field(..., alias='air-quality')
    canonical_record: CanonicalRecord = Field(..., alias='canonical-record')
    featured_photo: FeaturedPhoto = Field(..., alias='featured-photo')
    link_cluster: LinkCluster = Field(..., alias='link-cluster')
    nearest_city: NearestCity = Field(..., alias='nearest-city')
    operator: Operator
    permit: Permit
    campsites: Campsites
    accommodations: Accommodations
    alerts: Alerts
    blocked_date_ranges: BlockedDateRanges = Field(..., alias='blocked-date-ranges')
    bookmarks: Bookmarks
    campground_claims: CampgroundClaims = Field(..., alias='campground-claims')
    dump_stations: DumpStations = Field(..., alias='dump-stations')
    duplicates: Duplicates
    media_items: MediaItems = Field(..., alias='media-items')
    nearby_metro_driving_links: NearbyMetroDrivingLinks = Field(
        ..., alias='nearby-metro-driving-links'
    )
    photos: Photos
    pricing_rules: PricingRules = Field(..., alias='pricing-rules')
    rates: Rates
    recent_reviewers: RecentReviewers = Field(..., alias='recent-reviewers')
    reviews: Reviews
    taxes: Taxes
    videos: Videos
    water_stations: WaterStations = Field(..., alias='water-stations')


class Datum(BaseModel):
    id: str
    type: str
    links: Links
    attributes: Attributes
    relationships: Relationships


class Meta(BaseModel):
    record_count: int = Field(..., alias='record-count')
    page_count: int = Field(..., alias='page-count')


class Links28(BaseModel):
    first: str
    next: str
    last: str


class Model(BaseModel):
    data: Sequence[Datum]
    meta: Meta
    links: Links28
